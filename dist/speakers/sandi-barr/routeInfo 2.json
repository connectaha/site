{"path":"speakers/sandi-barr","templateID":4,"sharedPropsHashes":{},"localProps":{"speaker":{"id":"sandi-barr","firstName":"Sandi","lastName":"Barr","bio":"Currently a Senior Software Engineer at PRX, Sandi has many years professional experience as a software developer, from the back to the front end and in between. She has created intensive, data-driven applications in various industries from the financial markets, agriculture, defense, and now in podcasting. Sandi also enjoys sharing her expertise and experience with others in the software field, and especially identifies with those who are underrepresented in tech. She founded Omaha Coding Women, Omaha Girls Who Code, and Mystery Code Society, organizations that exist to create a sense of belonging and help girls and women excel in tech. She has also run Django Girls and Node School workshops in her local community and helps to organize the annual Nebraska JavaScript Conference.","title":"NgRx: Redux-style State Management in Angular","description":"We’ve heard that using TypeScript can help us avoid painful bugs programmers commonly run into when writing JavaScript by type-checking our code. One of purposes of TypeScript is to “statically identify constructs that are likely to be errors”. With NgRx we can take advantage of this type safety by using TypeScript classes as action creators with readonly type properties, so we can then infer the action object types in our state management code.\r\n\r\nNgRx provides a structuring mechanism for larger applications; it's a design pattern teaches you how to think. In this pattern, the developer needs to identify the streams of values the application is interested in and how they are combined to produce meaningful information for the view layer. The streams, the various applications states, and the view layer models are what we are setting out to define when we use Redux-style state management. This talk will show how to use the various NgRx reactive libraries for Angular state management to build out our application streams and then consume them in our components and services.\r\n\r\n","organization":"PRX","photo":"/photos/sandiBarr.jpg"},"nextId":"simon-yost","previousId":"paul-gower"}}
